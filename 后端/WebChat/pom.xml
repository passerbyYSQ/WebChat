<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.8.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>net.ysq</groupId>
	<artifactId>webchat</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!-- 打包方式为war包	-->
	<packaging>war</packaging>

	<name>WebChat</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>

		<!--	使用1.1.10，datetime转LocalDatetime会报错java.sql.SQLFeatureNotSupportedException: null
			https://blog.csdn.net/sinat_14977855/article/details/104042952-->
		<druid.version>1.1.21</druid.version>
		<mybatis.version>2.1.4</mybatis.version>
		<tk-mapper.version>2.1.5</tk-mapper.version>
		<jwt.version>3.3.0</jwt.version>
		<oss.version>3.11.2</oss.version>
		<zxing.version>3.3.3</zxing.version>
		<pagehelper.version>1.2.13</pagehelper.version>
		<netty.version>4.1.50.Final</netty.version>
		<mica.version>2.4.1-GA</mica.version>
	</properties>

	<dependencies>
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-thymeleaf</artifactId>-->
<!--		</dependency>-->

		<!-- 防xss
			https://gitee.com/596392912/mica/tree/master/mica-xss -->
		<dependency>
			<groupId>net.dreamlu</groupId>
			<artifactId>mica-xss</artifactId>
			<version>${mica.version}</version>
		</dependency>
		<!--	必须要依赖核心包	-->
		<dependency>
			<groupId>net.dreamlu</groupId>
			<artifactId>mica-core</artifactId>
			<version>${mica.version}</version>
		</dependency>

		<!-- 用户controller层中vo对象的参数校验，不通过会抛出异常。通过全局异常配置进行
        统一捕获返回给前端 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>${netty.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>${pagehelper.version}</version>
		</dependency>

		<!-- ZXing 二维码 -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>${zxing.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>${zxing.version}</version>
		</dependency>

		<!-- 阿里云oss	-->
		<dependency>
			<groupId>com.aliyun.oss</groupId>
			<artifactId>aliyun-sdk-oss</artifactId>
			<version>${oss.version}</version>
		</dependency>

		<!-- redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis.version}</version>
		</dependency>

		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>${jwt.version}</version>
		</dependency>

		<!--    通用Mapper，简化mybatis书写
        Github及使用文档：https://github.com/abel533/Mapper/
        如果不在这里引用，生成的pojo里面的注解会报错，因为没有引入javax.persistence -->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper-spring-boot-starter</artifactId>
			<version>${tk-mapper.version}</version>
		</dependency>

		<!-- druid的官方整合包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!--
		spring-boot-starter-web 中有spring-boot-starter-tomcat的依赖，而且作用域是scope
		而本pom.xml文件中，也引入了spring-boot-starter-tomcat的依赖，而作用域是provided
		根据maven的覆盖优先原则原则，所以父pom的tomcat依赖失效了，而本pom的tomcat依赖有效
		而provided的作用域，打包时候不会放进去。
		https://blog.csdn.net/weixin_34070493/article/details/111966492
		内嵌tomcat，打包时候不会放进去，而是由外部的tomcat来提供 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--  用于打包的插件	-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>net.ysq.webchat.WebChatApplication</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <!--
                mybatis逆向工程插件
               用maven mybatis插件如果不在plugin里面添加依赖包得引用的话，会找不到相关得jar包，
               在plugin外部得jar包，他不会去找到并执行，所以要把plugin运行依赖得jar配置都放在里面
            -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.7</version>
                <configuration>
                    <configurationFile>src/main/resources/mybatis/generatorConfig.xml</configurationFile>
					<!-- 谨慎设置为true，小心重新生成覆盖导致xml中自己写的sql语句全部没有了 -->
                    <overwrite>false</overwrite>
                    <verbose>true</verbose>
                </configuration>
                <dependencies>
                    <!-- 所需依赖 -->
                    <!-- Mybatis Generator -->
                    <dependency>
                        <groupId>org.mybatis.generator</groupId>
                        <artifactId>mybatis-generator-core</artifactId>
                        <version>1.3.7</version>
                        <scope>compile</scope>
                        <optional>true</optional>
                    </dependency>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <!-- 5.7及其以下 -->
                        <version>5.1.6</version>
                        <!-- 8.0及其以上。数据库版本和驱动包一定要对应，否则自动生成时会报错 -->
                        <!--                        <version>8.0.16</version>-->
                    </dependency>
                    <dependency>
                        <groupId>tk.mybatis</groupId>
                        <artifactId>mapper</artifactId>
                        <version>4.1.5</version>
                    </dependency>
                </dependencies>
            </plugin>
		</plugins>
	</build>

</project>
